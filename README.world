##########################################################################
# README.world - documents Stage's configyration file format. 
# $Id: README.world,v 1.3 2001-12-31 17:32:05 inspectorg Exp $
##########################################################################

THIS FILE IS CURRENTLY INCORRECT.  The world file format has been
completely changed; see examples/sample.world for the new format.

WARNING! this file is correct but incomplete; a work-in-progress kind
of deal.  Look at the example files (stage/examples/*.world) to get
the idea.

#------------------------------------------------------------------------
CONFIGURATION TAGS:

set environment_file = <foo.pnm>

  Specifies the filename of a PNM format graphics file (binary, 8-bit
  grayscale, black=floor, white=walls) used as the background.  GIMP and
  Photoshop can produce PNM files. A few example environment bitmaps
  (demo/*.pnm) are included in the distribution.

set pixels_per_meter = <x>

  specifies the scaling between environment pixels and meters. All
  device configurations (size, etc) are specified in meters.

set laser_res = <x>

  specifies the resolution of the laser ray-tracing. Larger numbers
  give lower resolution data, but Stage runs faster. You decide.

disable truth_server
disable environment_server

  switch off the TCP servers that provide info about stage's internal
  models to external processes. THESE SERVERS ARE REQUIRED FOR XS! If
  XS doesn't work, you probably have these lines in the config file.

#------------------------------------------------------------------------
DEVICE TAGS:

create <device> <generic_option> <value ...> <specific_option> <value ...>

This device starts up and configures a Player server:

player_device     - a Player server 

These devices simulate devices found in Player (see the Player docs):

laser_device      - a laser range-finder, like a SICK LMS-200
position_device   - a differential-steer robot base, like a Pioneer 2
sonar_device      - an array of range-finders, like on a Pioneer 2
ptz_device        - a pan/tilt/zoom camera, like a Sony XXXXX
vision_device     - a color blob detector, like the ACTS system
lbd_device        - a Laser Beacon Detector - a custom feature detector
misc_device       - gives compass heading, battery voltage, etc.
gripper_device    - simulates a 2 DOF gripper, like on the Pioneer 2 

These devices place passive objects in the environment:

laser_beacon      - detected by the lbd_device
vision_beacon     - detected by the vision_device
puck              - can be moved around by a position_device
box               - gets in the way and can be seen by the vision_device

(look in src/entityfactory.cc for the definitive list).

#------------------------------------------------------------------------
GENERIC DEVICE OPTIONS:

These options allow general object configuration:

pose <x> <y> <orientation>
  
  Specifies the position of the object relative to it's parent. If the
  object has no parents, this specifies the position in the world. The
  units are as specified by the units tag.

port <portnum>

  Specifies the Player port for this object. Not meaningful for non-player
  objects. The port setting is sticky; ie. once set, that port value is 
  applied to all following objects until explicitly set again. Default is 6665.

index <num>

  Specifies the Player index of the device. Default is 0.
 
color <colorstring>

   The object appears as the specified color, as named in the X11
   database, to both the vision device, and to GUIs.
   
name <name string>

   This name is provided for display by external GUIs

The following options allow you to change objects' default sensor
behaviour:
 
obstacle <true/false> 

  Determines whether this object is an obstacle; ie. whether position_devices 
  will crash into them or not. For example, this is true by default for
  position_devices and boxes, false for sonar_devices and lasers.

sonar <true/false> 

  Determines whether the object is visible to the sonars.

laser <true/false/bright1/bright2/bright3>

  Determines the visibility of objects to then laser_device. For example,
  the default value for position_devices is false; for laser_devices, true;
  for laser_beacons, bright1.

#------------------------------------------------------------------------
DEVICE-SPECIFIC OPTIONS:

(to do! - look at the load/save functions in the code for each device)

---------------------------------------------------------------------------
RTV
