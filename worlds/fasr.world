# FASR demo world 
# Authors: Richard Vaughan
# $Id: fasr.world,v 1.4 2008-04-01 23:57:41 rtv Exp $

include "pioneer.inc"
include "map.inc"
include "sick.inc"

interval_sim 100  # simulation timestep in milliseconds
interval_real 20 # real-time interval between simulation updates in milliseconds 
paused 1

resolution 0.02

# threads may speed things up here depending on available CPU cores & workload 
 threadpool 0 
# threadpool 3


# configure the GUI window
window
( 
  size [ 902.000 856.000 ] 

  center [ 3.982 5.051 ] 
  rotate [ 0 0 ]
  scale 168.655 

  pcam_loc [ 0 -4.000 2.000 ]
  pcam_angle [ 70.000 0 ]
  pcam_on 0
  
  show_data 1
  show_flags 1

  interval 50
)

# load an environment bitmap
floorplan
( 
  name "cave"
  size [16.000 16.000 0.600]
  pose [0 0 0 0]
  bitmap "bitmaps/cave.png"
)

zone
(
  color "green"
  pose [ -7.000 -7.000 0 0 ]
  name "source"
  ctrl "source"
)

zone
(
  color "red"
  pose [ 7.000 7.000 0 0 ]
  name "sink"
  ctrl "sink"
)

define charging_bump model
(
  pose [0.240 0 -0.100 0 ] 
  size [0.120 0.050 0.100] 
  take_watts 1000.0 
  color "orange" 
  obstacle_return 0
)

define autorob pioneer2dx		  
(		 
 sicklaser( samples 32 range_max 5 laser_return 2 watts 30 )
 ctrl "fasr"
 joules 100000 
 joules_capacity 400000 
 fiducial_return 0
 # charging_bump( fiducial( range 3 pose [ 0 0 -0.100 0 ] ) )

 gripper( pose [0.250 0 -0.220 0]  
          take_watts 1000.0 
          fiducial( range 3 )
          # paddles [ "closed" "up" ]
			 obstacle_return 0 # cheating for simplicity
			 # autosnatch 1
         )
)

define charge_station model
(  
  size [ 0.100 0.300 0.100 ]
  color "purple"
  
  # side blocks to restrict view angle
  model( color "purple" size [0.100 0.050 0.250] pose [ 0 0.100 0 0 ] )
  model( color "purple" size [0.100 0.050 0.250] pose [ 0 -0.100 0 0 ] ) 

  # the charging block
  model( 
    pose [ 0.010 0 0 0 ]
    color "yellow"
    size [ 0.050 0.200 0.100 ]
    joules -1  # provides infinite energy
    give_watts 1000 
    fiducial_return 2 # look for this in the fiducial sensor
   )

)

charge_station(  pose [ 7.803 -1.332 0 34.377 ] )
charge_station(  pose [ 7.940 -2.349 0 0 ] )
charge_station(  pose [ 7.931 -3.367 0 0 ] )
charge_station(  pose [ 7.931 -4.444 0 0 ] )

define puck model (
  size [0.120 0.120 0.100]  
  color "violet" 
  gripper_return 1 
  obstacle_return 0 
)

puck( pose [ 4.519 6.829 0 0 ] )
puck( pose [ 4.088 7.018 0 0 ] )
puck( pose [ 4.409 7.207 0 0 ] )
puck( pose [ 3.589 7.324 0 0 ] )
puck( pose [ 3.729 6.893 0 0 ] )
puck( pose [ 3.714 7.683 0 0 ] )
puck( pose [ 3.869 7.275 0 0 ] )
puck( pose [ 4.039 6.719 0 0 ] )
puck( pose [ 4.269 6.704 0 0 ] )
puck( pose [ 3.752 7.101 0 0 ] )
puck( pose [ 4.243 7.033 0 0 ] )
puck( pose [ 4.666 7.052 0 0 ] )
puck( pose [ 3.820 6.629 0 0 ] )

puck( pose [ 3.930 6.381 0 0 ] )
puck( pose [ 4.560 6.269 0 0 ] )
puck( pose [ 4.391 5.814 0 0 ] )
puck( pose [ 3.475 5.926 0 0 ] )
puck( pose [ 3.205 6.595 0 0 ] )
puck( pose [ 3.549 6.393 0 0 ] )
puck( pose [ 3.957 5.640 0 0 ] )
puck( pose [ 3.825 5.781 0 0 ] )
puck( pose [ 4.789 5.122 0 0 ] )
puck( pose [ 4.167 5.850 0 0 ] )
puck( pose [ 3.652 6.101 0 0 ] )
puck( pose [ 3.957 5.966 0 0 ] )
puck( pose [ 4.685 5.982 0 0 ] )
puck( pose [ 4.274 6.152 0 0 ] )
puck( pose [ 4.380 6.491 0 0 ] )
puck( pose [ 4.870 6.449 0 0 ] )
puck( pose [ 3.588 6.635 0 0 ] )

autorob( pose [5.462 7.216 0 -163.478] joules 300000 )
autorob( pose [7.574 6.269 0 -111.715] joules 100000 )
autorob( pose [5.615 6.185 0 107.666] joules 200000 )
autorob( pose [7.028 6.502 0 -128.279] joules 400000 )
autorob( pose [5.750 4.137 0 -97.047] joules 100000 )
autorob( pose [4.909 6.097 0 -44.366] joules 200000 )
autorob( pose [6.898 4.775 0 -117.576] joules 300000 )
autorob( pose [7.394 5.595 0 129.497] joules 400000 )
autorob( pose [6.468 6.708 0 170.743] joules 100000 )
autorob( pose [6.451 4.189 0 -61.453] joules 200000 )

autorob( pose [5.246 6.813 0 -61.295] joules 300000 )
autorob( pose [4.127 5.388 0 -147.713] joules 400000 )
autorob( pose [5.020 4.213 0 -125.236] joules 100000 )
autorob( pose [3.286 4.715 0 78.789] joules 200000 )
autorob( pose [5.440 5.317 0 -26.545] joules 300000 )
autorob( pose [7.641 6.998 0 163.239] joules 400000 )

#autorob( pose [7.559 4.764 0 -139.066] )
#autorob( pose [5.471 7.446 0 77.301]  )
#autorob( pose [7.122 4.175 0 -31.440]  )
#autorob( pose [5.944 6.951 0 2.937] )

#autorob( pose [6.800 5.897 0 -103.060] )
#autorob( pose [6.405 5.291 0 -103.060] )
#autorob( pose [5.974 5.725 0 -103.060] )
#autorob( pose [4.151 7.272 0 53.540] )
#autorob( pose [6.545 7.459 0 2.937] )
#autorob( pose [7.237 7.533 0 34.450] )
#autorob( pose [3.875 6.533 0 134.717] )
#autorob( pose [3.944 4.674 0 -103.060] )
#autorob( pose [4.634 6.897 0 -103.060] )
