# FASR demo world 
# Authors: Richard Vaughan
# $Id: fasr.world,v 1.4 2008-04-01 23:57:41 rtv Exp $

include "pioneer.inc"
include "map.inc"
include "sick.inc"

interval_sim 100  # simulation timestep in milliseconds
interval_real 0 # real-time interval between simulation updates in milliseconds 
paused 1

# time to pause (in GUI mode) or quit (in headless mode) the simulation
quit_time 3600 # 1 hour of simulated time

resolution 0.02

# threads may speed things up here depending on available CPU cores & workload 
# threads 3

# configure the GUI window
window
( 
  size [ 788.000 842.000 ] 

  center [ -0.067 -0.907 ] 
  rotate [ 0 0 ]
  scale 40.786 
  
  show_data 1
  show_flags 1

  interval 50
)

# load an environment bitmap
floorplan
( 
  name "cave"
  pose [0 0 0 0]
  size [16.000 16.000 0.600]
  bitmap "bitmaps/cave.png"
)

zone
(
  color "green"
  pose [ -7.000 -7.000 0 0 ]
  name "source"
  ctrl "source"
)

zone
(
  color "red"
  pose [ 7.000 7.000 0 0 ]
  name "sink"
  ctrl "sink"
)

define charging_bump model
(
  pose [0.240 0 -0.100 0 ] 
  size [0.120 0.050 0.100] 
  take_watts 1000.0 
  color "orange" 
  obstacle_return 0
)

define charge_station model
(  
  size [ 0.100 0.300 0.100 ]
  color "purple"
  
  # side blocks to restrict view angle
  model( color "purple" size [0.100 0.050 0.250] pose [ 0 0.100 0 0 ] )
  model( color "purple" size [0.100 0.050 0.250] pose [ 0 -0.100 0 0 ] ) 

  # the charging block
  model( 
    pose [ 0.010 0 0 0 ]
    color "yellow"
    size [ 0.050 0.200 0.100 ]
    joules -1  # provides infinite energy
    give_watts 1000 
    fiducial_return 2 # look for this in the fiducial sensor
   )

)

charge_station(  pose [ 7.940 -2.000 0 0 ] )
charge_station(  pose [ 7.940 -3.000 0 0 ] )
charge_station(  pose [ 7.940 -4.000 0 0 ] )

define puck model (
  size [0.120 0.120 0.100]  
  color "violet" 
  gripper_return 1 
  obstacle_return 0 
)

#puck( pose [ 1.175 2.283 0 0 ] )
#puck( pose [ 0.875 3.139 0 0 ] )
#puck( pose [ 1.043 2.825 0 0 ] )
#puck( pose [ 1.349 2.734 0 0 ] )
#puck( pose [ 2.625 3.068 0 0 ] )
#puck( pose [ 0.447 2.689 0 0 ] )
#puck( pose [ 0.143 3.308 0 0 ] )
#puck( pose [ 0.334 3.441 0 0 ] )
#puck( pose [ 1.439 3.218 0 0 ] )
#puck( pose [ 0.747 2.741 0 0 ] )
#puck( pose [ 0.955 2.086 0 0 ] )
#puck( pose [ 1.781 2.593 0 0 ] )
#puck( pose [ 1.068 2.476 0 0 ] )

#puck( pose [ 0.488 3.190 0 0 ] )
#puck( pose [ 1.708 3.198 0 0 ] )
#puck( pose [ 1.440 2.416 0 0 ] )
#puck( pose [ 1.140 3.045 0 0 ] )
#puck( pose [ 0.682 2.969 0 0 ] )
#puck( pose [ 2.205 3.268 0 0 ] )
#puck( pose [ 1.990 2.312 0 0 ] )
#puck( pose [ 0.646 3.486 0 0 ] )
#puck( pose [ 1.670 2.907 0 0 ] )
#puck( pose [ 2.091 2.830 0 0 ] )
#puck( pose [ -0.103 2.564 0 0 ] )
#puck( pose [ 1.950 3.462 0 0 ] )
#puck( pose [ 2.668 2.674 0 0 ] )
#puck( pose [ 0.549 2.367 0 0 ] )
#puck( pose [ 0.162 2.983 0 0 ] )
#puck( pose [ 1.067 3.367 0 0 ] )
#puck( pose [ 1.412 3.604 0 0 ] )

define autorob pioneer2dx		  
(		 
 sicklaser( samples 32 range_max 5 laser_return 2 watts 30 )
 ctrl "fasr"
 joules 100000 
 joules_capacity 400000 
 fiducial_return 0
 charging_bump( fiducial( range 3 pose [ 0 0 -0.100 0 ] ) )

 
 #gripper( pose [0.250 0 -0.220 0]  
 #         take_watts 1000.0 
 # fiducial( range 3 )
 #         # paddles [ "closed" "up" ]
#			 obstacle_return 0 # cheating for simplicity
#			 # autosnatch 1
#         )
)

autorob( pose [-1.667 -2.152 0 -90.000] joules 300000 )
autorob( pose [1.384 7.361 0 -0.139] joules 100000 )
autorob( pose [-5.258 -5.871 0 -120.113] joules 200000 )
autorob( pose [6.600 5.211 0 -89.911] joules 400000 )
autorob( pose [-6.355 1.726 0 90.000] joules 100000 )
autorob( pose [4.452 -1.179 0 164.286] joules 200000 )
autorob( pose [4.820 -3.446 0 24.788] joules 300000 )
autorob( pose [-0.187 3.065 0 -153.738] joules 400000 )
autorob( pose [4.309 3.736 0 121.988] joules 100000 )
autorob( pose [6.261 7.461 0 0] joules 200000 )

#autorob( pose [5.060 6.868 0 -61.295] joules 300000 )
#autorob( pose [4.161 5.544 0 -147.713] joules 400000 )
#autorob( pose [4.911 4.552 0 -125.236] joules 100000 )
#autorob( pose [3.985 6.474 0 -158.025] joules 200000 )
#autorob( pose [5.440 5.317 0 -26.545] joules 300000 )
#autorob( pose [6.362 5.632 0 163.239] joules 400000 )

#autorob( pose [7.559 4.764 0 -139.066] )
#autorob( pose [5.471 7.446 0 77.301]  )
#autorob( pose [7.122 4.175 0 -31.440]  )
#autorob( pose [5.944 6.951 0 2.937] )

#autorob( pose [6.800 5.897 0 -103.060] )
#autorob( pose [6.405 5.291 0 -103.060] )
#autorob( pose [5.974 5.725 0 -103.060] )
#autorob( pose [4.151 7.272 0 53.540] )
#autorob( pose [6.545 7.459 0 2.937] )
#autorob( pose [7.237 7.533 0 34.450] )
#autorob( pose [3.875 6.533 0 134.717] )
#autorob( pose [3.944 4.674 0 -103.060] )
#autorob( pose [4.634 6.897 0 -103.060] )

